// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smart_Store_CodeFirst_EF_MVC8.Models;

#nullable disable

namespace Smart_Store_CodeFirst_EF_MVC8.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Smart_Store_CodeFirst_EF_MVC8.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Fashion"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Groceries"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Home & Kitchen"
                        });
                });

            modelBuilder.Entity("Smart_Store_CodeFirst_EF_MVC8.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Price = 15000m,
                            ProductName = "Smartphone"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Price = 45000m,
                            ProductName = "Laptop"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Price = 500m,
                            ProductName = "T-shirt"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Price = 250m,
                            ProductName = "Cooking Oil"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            Price = 100m,
                            ProductName = "Notebook"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5,
                            Price = 2000m,
                            ProductName = "Mixer Grinder"
                        });
                });

            modelBuilder.Entity("Smart_Store_CodeFirst_EF_MVC8.Models.Product", b =>
                {
                    b.HasOne("Smart_Store_CodeFirst_EF_MVC8.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Smart_Store_CodeFirst_EF_MVC8.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
